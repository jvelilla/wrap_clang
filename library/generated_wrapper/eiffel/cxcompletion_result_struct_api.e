note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CXCOMPLETION_RESULT_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	cursorkind: INTEGER
			-- Access member `CursorKind`
		require
			exists: exists
		do
			Result := c_cursorkind (item)
		ensure
			result_correct: Result = c_cursorkind (item)
		end

	set_cursorkind (a_value: INTEGER) 
			-- Change the value of member `CursorKind` to `a_value`.
		require
			exists: exists
		do
			set_c_cursorkind (item, a_value)
		ensure
			cursorkind_set: a_value = cursorkind
		end

	completionstring: POINTER
			-- Access member `CompletionString`
		require
			exists: exists
		do
			Result := c_completionstring (item)
		ensure
			result_correct: Result = c_completionstring (item)
		end

	set_completionstring (a_value: POINTER) 
			-- Change the value of member `CompletionString` to `a_value`.
		require
			exists: exists
		do
			set_c_completionstring (item, a_value)
		ensure
			completionstring_set: a_value = completionstring
		end

feature {NONE} -- Implementation wrapper for struct CXCompletionResult

	sizeof_external: INTEGER 
		external
			"C inline use <Index.h>"
		alias
			"sizeof(CXCompletionResult)"
		end

	c_cursorkind (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXCompletionResult*)$an_item)->CursorKind
			]"
		end

	set_c_cursorkind (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXCompletionResult*)$an_item)->CursorKind =  (enum CXCursorKind)$a_value
			]"
		ensure
			cursorkind_set: a_value = c_cursorkind (an_item)
		end

	c_completionstring (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXCompletionResult*)$an_item)->CompletionString
			]"
		end

	set_c_completionstring (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXCompletionResult*)$an_item)->CompletionString =  (CXCompletionString)$a_value
			]"
		ensure
			completionstring_set: a_value = c_completionstring (an_item)
		end

end
