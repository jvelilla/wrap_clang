note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CXCURSOR_AND_RANGE_VISITOR_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	context: POINTER
			-- Access member `context`
		require
			exists: exists
		do
			Result := c_context (item)
		ensure
			result_correct: Result = c_context (item)
		end

	set_context (a_value: POINTER) 
			-- Change the value of member `context` to `a_value`.
		require
			exists: exists
		do
			set_c_context (item, a_value)
		ensure
			context_set: a_value = context
		end

	visit: POINTER
			-- Access member `visit`
		require
			exists: exists
		do
			Result := c_visit (item)
		ensure
			result_correct: Result = c_visit (item)
		end

	set_visit (a_value: POINTER) 
			-- Change the value of member `visit` to `a_value`.
		require
			exists: exists
		do
			set_c_visit (item, a_value)
		ensure
			visit_set: a_value = visit
		end

feature {NONE} -- Implementation wrapper for struct struct CXCursorAndRangeVisitor

	sizeof_external: INTEGER 
		external
			"C inline use <Index.h>"
		alias
			"sizeof(struct CXCursorAndRangeVisitor)"
		end

	c_context (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((struct CXCursorAndRangeVisitor*)$an_item)->context
			]"
		end

	set_c_context (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((struct CXCursorAndRangeVisitor*)$an_item)->context =  (void*)$a_value
			]"
		ensure
			context_set: a_value = c_context (an_item)
		end

	c_visit (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((struct CXCursorAndRangeVisitor*)$an_item)->visit
			]"
		end

	set_c_visit (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((struct CXCursorAndRangeVisitor*)$an_item)->visit =  (enum CXVisitorResult (*) (void *context, CXCursor anonymous_1, CXSourceRange anonymous_2))$a_value
			]"
		ensure
			visit_set: a_value = c_visit (an_item)
		end

end
