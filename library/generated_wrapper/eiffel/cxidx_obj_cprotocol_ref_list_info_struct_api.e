note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class CXIDX_OBJ_CPROTOCOL_REF_LIST_INFO_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	protocols: POINTER
			-- Access member `protocols`
		require
			exists: exists
		do
			Result := c_protocols (item) 
		ensure
		end

	set_protocols (a_value: POINTER )
			-- Set member `protocols`
		require
			a_value_not_void: a_value /= default_pointer
			exists: exists
		do
			set_c_protocols (item, a_value)
		ensure
			protocols_set: protocols = a_value 		end

	numprotocols: INTEGER
			-- Access member `numProtocols`
		require
			exists: exists
		do
			Result := c_numprotocols (item)
		ensure
			result_correct: Result = c_numprotocols (item)
		end

	set_numprotocols (a_value: INTEGER) 
			-- Change the value of member `numProtocols` to `a_value`.
		require
			exists: exists
		do
			set_c_numprotocols (item, a_value)
		ensure
			numprotocols_set: a_value = numprotocols
		end

feature {NONE} -- Implementation wrapper for struct CXIdxObjCProtocolRefListInfo

	sizeof_external: INTEGER 
		external
			"C inline use <Index.h>"
		alias
			"sizeof(CXIdxObjCProtocolRefListInfo)"
		end

	c_protocols (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXIdxObjCProtocolRefListInfo*)$an_item)->protocols
			]"
		end

	set_c_protocols (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXIdxObjCProtocolRefListInfo*)$an_item)->protocols =  (CXIdxObjCProtocolRefInfo const*const *)$a_value
			]"
		ensure
			protocols_set: a_value = c_protocols (an_item)
		end

	c_numprotocols (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXIdxObjCProtocolRefListInfo*)$an_item)->numProtocols
			]"
		end

	set_c_numprotocols (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <Index.h>"
		alias
			"[
				((CXIdxObjCProtocolRefListInfo*)$an_item)->numProtocols =  (unsigned)$a_value
			]"
		ensure
			numprotocols_set: a_value = c_numprotocols (an_item)
		end

end
