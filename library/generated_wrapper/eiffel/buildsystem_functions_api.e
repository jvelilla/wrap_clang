note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class BUILDSYSTEM_FUNCTIONS_API


feature -- Access

	clang_get_build_session_timestamp: INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_getBuildSessionTimestamp ();
			]"
		end

	clang_virtual_file_overlay_create (options: INTEGER): POINTER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_VirtualFileOverlay_create ((unsigned)$options);
			]"
		end

	clang_virtual_file_overlay_add_file_mapping (anonymous_1: CXVIRTUAL_FILE_OVERLAY_IMPL_STRUCT_API; virtualpath: STRING_8; realpath: STRING_8): INTEGER 
		local
			virtualpath_c_string: C_STRING
			realpath_c_string: C_STRING
		do
			create virtualpath_c_string.make (virtualpath)
			create realpath_c_string.make (realpath)
			Result := c_clang_virtual_file_overlay_add_file_mapping (anonymous_1.item, virtualpath_c_string.item, realpath_c_string.item)
		ensure
			instance_free: class
		end

	clang_virtual_file_overlay_set_case_sensitivity (anonymous_1: CXVIRTUAL_FILE_OVERLAY_IMPL_STRUCT_API; casesensitive: INTEGER): INTEGER 
		do
			Result := c_clang_virtual_file_overlay_set_case_sensitivity (anonymous_1.item, casesensitive)
		ensure
			instance_free: class
		end

	clang_virtual_file_overlay_write_to_buffer (anonymous_1: CXVIRTUAL_FILE_OVERLAY_IMPL_STRUCT_API; options: INTEGER; out_buffer_ptr: POINTER; out_buffer_size: POINTER): INTEGER 
		do
			Result := c_clang_virtual_file_overlay_write_to_buffer (anonymous_1.item, options, out_buffer_ptr, out_buffer_size)
		ensure
			instance_free: class
		end

	clang_free (buffer: POINTER) 
		do
			c_clang_free (buffer)
		ensure
			instance_free: class
		end

	clang_virtual_file_overlay_dispose (anonymous_1: CXVIRTUAL_FILE_OVERLAY_IMPL_STRUCT_API) 
		do
			c_clang_virtual_file_overlay_dispose (anonymous_1.item)
		ensure
			instance_free: class
		end

	clang_module_map_descriptor_create (options: INTEGER): POINTER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_ModuleMapDescriptor_create ((unsigned)$options);
			]"
		end

	clang_module_map_descriptor_set_framework_module_name (anonymous_1: CXMODULE_MAP_DESCRIPTOR_IMPL_STRUCT_API; name: STRING_8): INTEGER 
		local
			name_c_string: C_STRING
		do
			create name_c_string.make (name)
			Result := c_clang_module_map_descriptor_set_framework_module_name (anonymous_1.item, name_c_string.item)
		ensure
			instance_free: class
		end

	clang_module_map_descriptor_set_umbrella_header (anonymous_1: CXMODULE_MAP_DESCRIPTOR_IMPL_STRUCT_API; name: STRING_8): INTEGER 
		local
			name_c_string: C_STRING
		do
			create name_c_string.make (name)
			Result := c_clang_module_map_descriptor_set_umbrella_header (anonymous_1.item, name_c_string.item)
		ensure
			instance_free: class
		end

	clang_module_map_descriptor_write_to_buffer (anonymous_1: CXMODULE_MAP_DESCRIPTOR_IMPL_STRUCT_API; options: INTEGER; out_buffer_ptr: POINTER; out_buffer_size: POINTER): INTEGER 
		do
			Result := c_clang_module_map_descriptor_write_to_buffer (anonymous_1.item, options, out_buffer_ptr, out_buffer_size)
		ensure
			instance_free: class
		end

	clang_module_map_descriptor_dispose (anonymous_1: CXMODULE_MAP_DESCRIPTOR_IMPL_STRUCT_API) 
		do
			c_clang_module_map_descriptor_dispose (anonymous_1.item)
		ensure
			instance_free: class
		end

feature -- Externals

	c_clang_virtual_file_overlay_add_file_mapping (anonymous_1: POINTER; virtualpath: POINTER; realpath: POINTER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_VirtualFileOverlay_addFileMapping ((CXVirtualFileOverlay)$anonymous_1, (char const*)$virtualpath, (char const*)$realpath);
			]"
		end

	c_clang_virtual_file_overlay_set_case_sensitivity (anonymous_1: POINTER; casesensitive: INTEGER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_VirtualFileOverlay_setCaseSensitivity ((CXVirtualFileOverlay)$anonymous_1, (int)$casesensitive);
			]"
		end

	c_clang_virtual_file_overlay_write_to_buffer (anonymous_1: POINTER; options: INTEGER; out_buffer_ptr: POINTER; out_buffer_size: POINTER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_VirtualFileOverlay_writeToBuffer ((CXVirtualFileOverlay)$anonymous_1, (unsigned)$options, (char**)$out_buffer_ptr, (unsigned*)$out_buffer_size);
			]"
		end

	c_clang_free (buffer: POINTER)
		external
			"C inline use <Index.h>"
		alias
			"[
				clang_free ((void*)$buffer);
			]"
		end

	c_clang_virtual_file_overlay_dispose (anonymous_1: POINTER)
		external
			"C inline use <Index.h>"
		alias
			"[
				clang_VirtualFileOverlay_dispose ((CXVirtualFileOverlay)$anonymous_1);
			]"
		end

	c_clang_module_map_descriptor_set_framework_module_name (anonymous_1: POINTER; name: POINTER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_ModuleMapDescriptor_setFrameworkModuleName ((CXModuleMapDescriptor)$anonymous_1, (char const*)$name);
			]"
		end

	c_clang_module_map_descriptor_set_umbrella_header (anonymous_1: POINTER; name: POINTER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_ModuleMapDescriptor_setUmbrellaHeader ((CXModuleMapDescriptor)$anonymous_1, (char const*)$name);
			]"
		end

	c_clang_module_map_descriptor_write_to_buffer (anonymous_1: POINTER; options: INTEGER; out_buffer_ptr: POINTER; out_buffer_size: POINTER): INTEGER
		external
			"C inline use <Index.h>"
		alias
			"[
				return clang_ModuleMapDescriptor_writeToBuffer ((CXModuleMapDescriptor)$anonymous_1, (unsigned)$options, (char**)$out_buffer_ptr, (unsigned*)$out_buffer_size);
			]"
		end

	c_clang_module_map_descriptor_dispose (anonymous_1: POINTER)
		external
			"C inline use <Index.h>"
		alias
			"[
				clang_ModuleMapDescriptor_dispose ((CXModuleMapDescriptor)$anonymous_1);
			]"
		end

feature -- Externals Address

end
